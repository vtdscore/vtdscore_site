[{"authors":["admin"],"categories":null,"content":"\nThis organziation is dedicated to fostering an effective and supportive data science learning community at the University of Vermont.\nWe are a student led group dedicated to learning about and sharing tools for data science and visualization. We meet weekly to have structured lessons on different techniques, share resources, and do creative problem-solving using real data. These sessions begin with a short tutorial and finish with real-time coding of freely available datasets. Topics of interest for these tutorials include coding basics, bioinformatics, image processing, statistics, and other data analysis as the groups’ needs evolve.\nIn addition to the weekly seminars, we also have a dedicated Slack group where members can post questions they have about how to analyze their data, address errors they might run into, and share successes they have with the group. In addition to this instructional website, the Slack group also has a dedicated channel for learning resources which will contain an ever-growing list of tutorials, instructional videos, and educational books on data-science to enable users that wish to learn on their own outside of our instructional sessions. Although we are a student-run group, anyone who is seeking to become a more informed data scientist or start their data science education is welcome.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"This organziation is dedicated to fostering an effective and supportive data science learning community at the University of Vermont.\nWe are a student led group dedicated to learning about and sharing tools for data science and visualization.","tags":null,"title":"","type":"authors"},{"authors":["admin"],"categories":null,"content":"Jeff Brabec is a third year graduate student at the University of Vermont in the Neuroscience Graduate Program. He works with Matt Mahoney in the Epilepsy Cognition and Development group studying network based functional prediction (NBFP) of genes in complex diseases. He\u0026rsquo;s currenlty working on a project developing NBFP for the prediction of candidate genes in Alzheimer\u0026rsquo;s Disease.\nSince the start of COVID-19 Jeff and his fellow NGPer and lab member Montana, started this Data Science Core to promote learning of data science skills and bionformatic techniques at UVM.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"ce8d5e8de17279b1e4ee35f5a0312a07","permalink":"/authors/jeff/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/jeff/","section":"authors","summary":"Jeff Brabec is a third year graduate student at the University of Vermont in the Neuroscience Graduate Program. He works with Matt Mahoney in the Epilepsy Cognition and Development group studying network based functional prediction (NBFP) of genes in complex diseases.","tags":null,"title":"Jeff Brabec","type":"authors"},{"authors":["admin"],"categories":null,"content":"Montana is a third year graduate student at the University of Vermont in the Neuroscience Graduate Program. She works with Matt Mahoney in the Epilepsy Cognition and Development group studying the intersection of epilepsy and genetics. Current projects focus on Tuberous Sclerosis Complex, epilepsy genetics, and network-based functional prediction for gene prioritization. She likes bikes.\nSince the start of COVID-19 Monana and her fellow NGPer and lab member Jeff, started this Data Science Core to promote learning of data science skills and bionformatic techniques at UVM.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"3c4c72f8ca32c2b6302bdabd5c0c2422","permalink":"/authors/montana/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/montana/","section":"authors","summary":"Montana is a third year graduate student at the University of Vermont in the Neuroscience Graduate Program. She works with Matt Mahoney in the Epilepsy Cognition and Development group studying the intersection of epilepsy and genetics.","tags":null,"title":"Montana Kay Lara","type":"authors"},{"authors":null,"categories":null,"content":"The following are all free books, available to read online:\n Modern Dive: http://moderndive.com R for Data Science: http://r4ds.had.co.nz Fundamentals of Data Visualization: http://serialmentor.com/dataviz/ Data Visualization: A Practical Introduction: http://socviz.co  ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"cf14371d178159749331f8d65bfb9027","permalink":"/courses/resources/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/resources/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"\nVisualization  William Cleveland, The Elements of Graphing Data Colin Ware, Information Visualization: Perception for Design Stephen Kosslyn, Graph Design for Eye and Mind Tamara Munzer, Visualization Analysis and Design Nathan Yau   Data Points  Visualize This   Stephen Few, Now You See It: Simple Visualization Techniques for Quantitative Analysis Alberto Cairo   The Functional Art: An Introduction to Information Graphics and Visualization  The Truthful Art: Data, Charts, and Maps for Communication   Katy Börner, Visual Insights: A Practical Guide to Making Sense of Data Joel Katz, Designing Information: Human Factors and Common Sense in Information Design Claus Wilke, Fundamentals of Data Visualization Manuel Lima   Visual Complexity: Mapping Patterns of Information  The Book of Trees: Visualizing Branches of Knowledge   Edward Tufte   The Visual Display of Quantitative Information  Envisioning Information  Visual Explanations  Beautiful Evidence    Related Topics  Maureen Stone, A Field Guide to Digital Color Rudolf Arnheim, Visual Thinking Scott McCloud, Understanding Comics: The Invisible Art  ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"8c81f0a760be78d132709d3de0a92a58","permalink":"/courses/resources/books/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/resources/books/","section":"courses","summary":"\nVisualization  William Cleveland, The Elements of Graphing Data Colin Ware, Information Visualization: Perception for Design Stephen Kosslyn, Graph Design for Eye and Mind Tamara Munzer, Visualization Analysis and Design Nathan Yau   Data Points  Visualize This   Stephen Few, Now You See It: Simple Visualization Techniques for Quantitative Analysis Alberto Cairo   The Functional Art: An Introduction to Information Graphics and Visualization  The Truthful Art: Data, Charts, and Maps for Communication   Katy Börner, Visual Insights: A Practical Guide to Making Sense of Data Joel Katz, Designing Information: Human Factors and Common Sense in Information Design Claus Wilke, Fundamentals of Data Visualization Manuel Lima   Visual Complexity: Mapping Patterns of Information  The Book of Trees: Visualizing Branches of Knowledge   Edward Tufte   The Visual Display of Quantitative Information  Envisioning Information  Visual Explanations  Beautiful Evidence    Related Topics  Maureen Stone, A Field Guide to Digital Color Rudolf Arnheim, Visual Thinking Scott McCloud, Understanding Comics: The Invisible Art  ","tags":null,"title":"Useful books","type":"docs"},{"authors":null,"categories":null,"content":"\nPapers  Brehmer M, Sedlmair M, Ingram S, Munzner T. Visualizing Dimensionally-reduced Data: Interviews with Analysts and a Characterization of Task Sequences. Proc. Beyond Time \u0026amp; Errors: Novel Evaluation Methods For Information Visualization (BELIV) 2014. p. 1–8. Borland D, Taylor MR. Rainbow color map (still) considered harmful. IEEE computer graphics and applications. 2007 Mar;27(2):14–7. Christensen DL, Baio J, Van Naarden Braun K, Bilder D, Charles J, Constantino JN, et al. Prevalence and Characteristics of Autism Spectrum Disorder Among Children Aged 8 Years\u0026ndash;Autism and Developmental Disabilities Monitoring Network, 11 Sites, United States, 2012. MMWR Surveillance summaries : Morbidity and mortality weekly report Surveillance summaries / CDC. 2016 Apr 1;65(3):1–23. Cleveland WS, McGill R. Graphical Perception: Theory, Experimentation, and Application to the Development of Graphical Methods. Journal of the American Statistical Association. 1984;79(387):531–54. Cleveland WS, Diaconis P, McGill R. Variables on Scatterplots Look More Highly Correlated When the Scales Are Increased. Science; 1982;216(4550):1138–41. Dörk M, Feng P, Collins C, Carpendale S. Critical InfoVis: exploring the politics of visualization. Proc. \u0026lsquo;CHI 2013. Elliott, K. \u0026ldquo;39 studies about human perception in 30 minutes\u0026rdquo;; presented at OpenVis 2016. Heer J, Bostock M. Crowdsourcing graphical perception: using mechanical turk to assess visualization design. ACM CHI \u0026lsquo;10; 2010. p. 203–12. Kosara R. An Empire Built On Sand: Reexamining What We Think We Know About Visualization. in the Proceedings of the Sixth Workshop on Beyond Time and Errors on Novel Evaluation Methods for Visualization (BELIV \u0026lsquo;16) 2016. p. 162–8. Krzywinski M, Altman N. Points of significance: error bars. Nat Meth. Nature Research; 2013 Oct;10(10):921–2. Krzywinski M, Altman N. Visualizing samples with box plots. Nat Meth. 2014 Feb;11(2):119–20. Shneiderman B. Research agenda: Visual overviews for exploratory search. Information Seeking Support Systems. 2008;11:4. Sedlmair M, Meyer M, Munzner T. Design Study Methodology: Reflections from the Trenches and the Stacks. IEEE Transactions on Visualization and Computer Graphics. 2012 Dec;18(12):2431–40. Sedlmair M, Tatu A, Munzner T, Tory M. A Taxonomy of Visual Cluster Separation Factors. Computer Graphics Forum. 2012;31(3pt4):1335–44. Sedlmair M, Munzner T, Tory M. Empirical Guidance on Scatterplot and Dimension Reduction Technique Choices. IEEE Transactions on Visualization and Computer Graphics. 2013 Dec;19(12):2634–43. Weissgerber TL, Milic NM, Winham SJ, Garovic VD. Beyond bar and line graphs: time for a new data presentation paradigm. PLoS Biol. Public Library of Science; 2015 Apr;13(4):e1002128.  Blog posts, etc.  The Why Axis\u0026rsquo;s \u0026ldquo;Mind the Gap: An Economic Chart Remake\u0026rdquo;, by Jon Schwabish Notes on the Arabic FedEx logo. Jenny Cham\u0026rsquo;s delightful \u0026ldquo;sketchnotes\u0026rdquo; from a 2014 seminar by the incomparable Tamara Munzner. Randy Olson\u0026rsquo;s illustration of Small Multiples vs. Animated GIFs. Visual.ly\u0026rsquo;s Color Emotion Guide I am very interested in William Playfair and the history of data visualization:  Atlas Obscura, The Scottish Scoundrel Who Changed How We See Data Lauren Klein, Repairing William Playfair at the MLA Georgia Tech\u0026rsquo;s Digital Humanities Lab, Repairing William Playfair   Neil Richards, When is a visualisation a call to action? Carl Zimmer (yes, the Carl Zimmer) on genome graphs: As DNA reveals its secrets, scientists are assembling a new picture of humanity, with numerous examples of creative new ways to visualize genetic variation. Ben Jones, \u0026ldquo;From Simple Tables to Multiple Vizzes\u0026rdquo;: an illustration of ten different ways to visualize the same table. What different stories pop out from the different visualizations? Kristoffer Magnusson, How to tell when error bars correspond to a significant p-value Kyle Walker, Should you visualize data with a map or a chart? Thoughts from teaching introductory geography Lazaro Gamio (Washington Post), Election maps are telling you big lies about small things Cartonerd, The NYT election map vis4.net, Why we didn’t use a cartogram in the Brexit map Benjamin Hennig, Cartogram Special – Brexit Tom Pearson (Financial Times), Communicating with data — How the FT explained Brexit: \u0026ldquo;From early sketch to final dashboard, FT data visualisation experts explain the process\u0026rdquo;  ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"b5a985049bb5ee89b33c5071714bdd5f","permalink":"/courses/resources/readings/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/resources/readings/","section":"courses","summary":"Papers  Brehmer M, Sedlmair M, Ingram S, Munzner T. Visualizing Dimensionally-reduced Data: Interviews with Analysts and a Characterization of Task Sequences. Proc. Beyond Time \u0026amp; Errors: Novel Evaluation Methods For Information Visualization (BELIV) 2014.","tags":null,"title":"Useful readings","type":"docs"},{"authors":null,"categories":null,"content":"\n  Visualising Data\u0026rsquo;s \u0026ldquo;Resources\u0026rdquo; index  Matt Brehmer\u0026rsquo;s Monster List Of Resources (from UBC)  OHSU Communications Office (Graphic Design services, etc.)  HelpMeViz (crowdsourced data visualization help)  Blogs   The Functional Art  FlowingData  The Why Axis  eagereyes  Visua.ly\u0026rsquo;s blog  Junk Charts  WTF Visualizations  setosa.io (nifty d3 demos!)  References \u0026amp; Examples  R Graph Compendia/Catalogs:  A Compendium of Clean Graphs in R, by Eric-Jan Wagenmakers and Quentin F. Gronau (note: in \u0026ldquo;Base R\u0026rdquo;)  R Graph Catalog, by Joanna Zhao and Jennifer Bryan (note: in ggplot2)  Markdown Tutorial  Summer 2016 ggplot OHSU Data Jamboree A useful tutorial on using the Seaborn Python library for visualizing distributions.  A Dramatic Tour through Python’s Data Visualization Landscape (including ggplot and Altair) The Washington Post\u0026rsquo;s \u0026ldquo;demographic tug-of-war\u0026rdquo; visualization is a lovely illustration of how not to appropriately use color saturation and hue to encode information, and also has misleading axes (both in unit spacing and direction)! The New York Times\u0026rsquo; interactive \u0026ldquo;The 1,024 Ways Clinton or Trump Can Win the Election\u0026rdquo; is a great use of interactivity as a data exploration tool. Also from the NYT, \u0026ldquo;Your Surgeon Is Probably a Republican, Your Psychiatrist Probably a Democrat\u0026rdquo; makes excellent use of a graphs and charts to tell a very clear story. Also note their detailed description at the end of the article of how the data were collected! The Washington Post\u0026rsquo;s \u0026ldquo;One Hundred Years of Hurricanes\u0026rdquo; is a nice example of small-multiples cartography along with color. The New York Times\u0026rsquo; \u0026ldquo;What Good Marathons and Bad Investments Have in Common\u0026rdquo; illustrates a good use of contrast and preattentive processing (plus is a very interesting story!). From Our World In Data, a nice example of using color and saturation to highlight certain information, in a terrifying plot about Life Expectancy vs. Health Expenditure Over Time.  Myriahedral map projections are interesting.  Tilegrams are a good alternative to a cartogram. We do not recommend making bivariate chloropleth maps, but if you must, here\u0026rsquo;s a good tutorial on how to do it and what some of the considerations are.  Resources \u0026amp; Tools   ColorBrewer  Adobe Kuler  Colorgorical  Photochrome  Lyra Packages:   janitor  Vincent (Python-to-Vega generation library)  mpld3, an implementation of matplotlib on top of d3.js.    ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"142b314b02339b522cce5a8f52dbed90","permalink":"/courses/resources/websites/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/resources/websites/","section":"courses","summary":"Visualising Data\u0026rsquo;s \u0026ldquo;Resources\u0026rdquo; index  Matt Brehmer\u0026rsquo;s Monster List Of Resources (from UBC)  OHSU Communications Office (Graphic Design services, etc.)  HelpMeViz (crowdsourced data visualization help)  Blogs   The Functional Art  FlowingData  The Why Axis  eagereyes  Visua.","tags":null,"title":"Useful websites","type":"docs"},{"authors":null,"categories":["Tutorials"],"content":" Installing Packages As you start doing more advanced analyses in R (e.g. gene expression or imaging analysis; machine learning), there are times where you’ll need to install new packages that were written specifically to do those analyses. These packages can add completely new tools to your R toolbox, or they will help optimize functions or outputs from base R and other R packages.\nSo how do we install new packages? The most common way to download packages is done using this syntax:\ninstall.packages(\u0026quot;tidyverse\u0026quot;) This function, install.packages(), searches “The Comprehensive R Archive Network” or CRAN for the package(s) you pass to it. CRAN is a file transfer protocol (FTP) server with updated versions of all R packages maintained on CRAN.\nThere will be times where you start using another lab’s workflow and you might find that they use multiple packages that you have yet to install. Instead of typing install.packages() over and over again, you can provide a vector of the package names you’d like to install, and the function will iteratively install the packages listed:\nto_install \u0026lt;- c(\u0026quot;tidyverse\u0026quot;, \u0026quot;gprofiler2\u0026quot;, \u0026quot;cowplot\u0026quot;) install.packages(to_install) #OR install.packages(c(\u0026quot;tidyverse\u0026quot;, \u0026quot;gprofiler2\u0026quot;, \u0026quot;cowplot\u0026quot;)) The same thing can be done when you want to load your packages at the beginning of your workflow. Sometimes you could have upwards of 15 packages that you’re working with and it’s inefficient to individually load each one:\nto_load \u0026lt;- c(\u0026quot;tidyverse\u0026quot;, \u0026quot;gprofiler2\u0026quot;, \u0026quot;cowplot\u0026quot;, \u0026quot;Matrix\u0026quot;, \u0026quot;tidymodels\u0026quot;) library(to_load) #OR library(c(\u0026quot;tidyverse\u0026quot;, \u0026quot;gprofiler2\u0026quot;, \u0026quot;cowplot\u0026quot;, \u0026quot;Matrix\u0026quot;, \u0026quot;tidymodels\u0026quot;))  Devtools Sometimes you’ll run across someone who is in the process of developing a new package which means it hasn’t been released on CRAN yet. They’ll often make development versions of their code available on GitHub for people to install and use prior to release of the full version. This practice ensures that a useful tool is accessible as soon as possible, and it also allows people to road test the code and find any bugs prior to full release.\nTo install a package that is still in development from GitHub you’ll need to first install the remotes pacakge from CRAN. It has several handy tools for downloading and updating packages from various repositories!\nIn this case I want to download the TidyTuesdayR package which lets me easily read each week’s TidyTuesday data directly into R.\ninstall.packages(\u0026quot;remotes\u0026quot;) install_github(\u0026quot;thebioengineer/tidytuesdayR\u0026quot;)  To install a package from GitHub you need to provide the username of the person developing the package and the repository in which they have the package. In this case “thebioengineer” is the one developing this package and he has all the relevant code needed to compile the package in the repository “tidytuesdayR”.\nHowever, as of June 26th the tidytuesdayR package is on CRAN so it’s now available to install using install.packages()!\nBioconductor As biological scientists there is one final package repository that we’ll want to use if we’re doing any kind of genetic or genomic analyses and that is Bioconductor. Bioconductor specifically maintains packages that help with biological analyses. Packages kept on Biocondoucter will help you do everythign from downloading data from online databases to doing advanced statistics on biological data. As we continue diving into R we’ll do a deep dive on some of the most useful packages they provide.\nTo install Bioconductor:\nif (!requireNamespace(\u0026quot;BiocManager\u0026quot;, quietly = TRUE)) install.packages(\u0026quot;BiocManager\u0026quot;) BiocManager::install(version = \u0026quot;3.11\u0026quot;) This snippet of code first checks if the package “BiocManager” is already downloaded. If it isn’t than the package is installed. Once its installed, the package has its own “install” function that allows you to update it to the latest version which, at the time of writing, was 3.11.\nThat last line of code in the previous section is the exact syntax we’ll use to download packages from Bioconductor:\nBiocManager::install(\u0026quot;GEOquery\u0026quot;) GEOquery is a useful package that we’ll use in future sessions. It provides an interface to the Gene Expression Omnibus or GEO which is a repository of gene expression data from NIH funded projects.\nThose are the main ways that we’ll install packages in R! I hope you found this helpful!\n  ","date":1598400000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1598400000,"objectID":"7dc5eb23ce0a489ab9c9c40692702c29","permalink":"/tutorials/installing-packages/","publishdate":"2020-08-26T00:00:00Z","relpermalink":"/tutorials/installing-packages/","section":"tutorials","summary":"Installing Packages As you start doing more advanced analyses in R (e.g. gene expression or imaging analysis; machine learning), there are times where you’ll need to install new packages that were written specifically to do those analyses.","tags":[],"title":"Installing Packages","type":"tutorials"},{"authors":null,"categories":["TidyTuesday"],"content":" This workflow uses the African American Achievements Tidy Tuesday dataset, downloaded June 24, 2020, for the purposes of learning and education on the intersection of racial matters and data science.\nOutline I. Setup II. Data III. Clean Data IV. Look at Data V. Plots\n I. Setup library(tidyverse) ## ── Attaching packages ─────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.2 ✓ purrr 0.3.4 ## ✓ tibble 3.0.2 ✓ dplyr 1.0.0 ## ✓ tidyr 1.1.0 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(ggplot2) library(tidytuesdayR) #you would need the following packages if you were going to run the cleaning script instead of the II.Data grabs library(readr) library(xml2) library(rvest) ## ## Attaching package: \u0026#39;rvest\u0026#39; ## The following object is masked from \u0026#39;package:purrr\u0026#39;: ## ## pluck ## The following object is masked from \u0026#39;package:readr\u0026#39;: ## ## guess_encoding library(janitor) ## ## Attaching package: \u0026#39;janitor\u0026#39; ## The following objects are masked from \u0026#39;package:stats\u0026#39;: ## ## chisq.test, fisher.test library(purrr) library(stringr) library(tibble) library(here) ## here() starts at /Users/jeffreybrabec/Documents/data_science_group/vtdscore_site library(magrittr) ## ## Attaching package: \u0026#39;magrittr\u0026#39; ## The following object is masked from \u0026#39;package:purrr\u0026#39;: ## ## set_names ## The following object is masked from \u0026#39;package:tidyr\u0026#39;: ## ## extract  II. Data Dataset provided here: https://github.com/rfordatascience/tidytuesday/tree/master/data/2020/2020-06-09\n# Get the Data viar readr read_csv firsts \u0026lt;- readr::read_csv(\u0026#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-09/firsts.csv\u0026#39;) ## Parsed with column specification: ## cols( ## year = col_double(), ## accomplishment = col_character(), ## person = col_character(), ## gender = col_character(), ## category = col_character() ## ) science \u0026lt;- readr::read_csv(\u0026#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-09/science.csv\u0026#39;) ## Parsed with column specification: ## cols( ## name = col_character(), ## birth = col_double(), ## death = col_double(), ## occupation_s = col_character(), ## inventions_accomplishments = col_character(), ## references = col_character(), ## links = col_character() ## ) # Or read in with tidytuesdayR package (https://github.com/thebioengineer/tidytuesdayR) # Install via devtools::install_github(\u0026quot;thebioengineer/tidytuesdayR\u0026quot;) # Either ISO-8601 date or year/week works! tuesdata \u0026lt;- tidytuesdayR::tt_load(\u0026#39;2020-06-09\u0026#39;) ## --- Compiling #TidyTuesday Information for 2020-06-09 ---- ## --- There are 2 files available --- ## --- Starting Download --- ## ## Downloading file 1 of 2: `firsts.csv` ## Downloading file 2 of 2: `science.csv` ## --- Download complete --- tuesdata \u0026lt;- tidytuesdayR::tt_load(2020, week = 24) ## --- Compiling #TidyTuesday Information for 2020-06-09 ---- ## --- There are 2 files available --- ## --- Starting Download --- ## ## Downloading file 1 of 2: `firsts.csv` ## Downloading file 2 of 2: `science.csv` ## --- Download complete --- #Get the two datasets out of the tuesdata firsts \u0026lt;- tuesdata$firsts science \u0026lt;- tuesdata$science  III. Clean Data Tidy tuesday provides their cleaning script used to make the two datasets - and it is worth at least looking at to see how they build these.\n# URL 1 url_science \u0026lt;- \u0026quot;https://en.wikipedia.org/wiki/List_of_African-American_inventors_and_scientists\u0026quot; raw_html_sci \u0026lt;- read_html(url_science) get_source \u0026lt;- function(x){ raw_html_sci %\u0026gt;% html_nodes(\u0026quot;tbody\u0026quot;) %\u0026gt;% .[[2]] %\u0026gt;% html_nodes(glue::glue(\u0026quot;tr:nth-child({x})\u0026quot;)) %\u0026gt;% html_nodes(\u0026quot;td:nth-child(1) \u0026gt; a\u0026quot;) %\u0026gt;% html_attr(\u0026quot;href\u0026quot;) } raw_sci_tab \u0026lt;- raw_html_sci %\u0026gt;% html_table(fill = TRUE) %\u0026gt;% .[[2]] %\u0026gt;% janitor::clean_names() %\u0026gt;% as_tibble() %\u0026gt;% mutate(links = map(row_number(), get_source)) clean_sci \u0026lt;- raw_sci_tab %\u0026gt;% mutate(references = str_replace_all(references, \u0026quot;\\\\]\u0026quot;, \u0026quot;,\u0026quot;), references = str_remove_all(references, \u0026quot;\\\\[\u0026quot;)) %\u0026gt;% unnest(links) %\u0026gt;% mutate(links = paste0(\u0026quot;https://en.wikipedia.org\u0026quot;, links)) %\u0026gt;% separate(years, into = c(\u0026quot;birth\u0026quot;, \u0026quot;death\u0026quot;), sep = \u0026quot;–\u0026quot;) %\u0026gt;% mutate(across(c(birth, death), as.integer)) %\u0026gt;% mutate(occupation_s = str_replace_all(occupation_s, \u0026quot;,\u0026quot;, \u0026quot;;\u0026quot;)) clean_sci %\u0026gt;% filter(str_detect(tolower(occupation_s), \u0026quot;statistician\u0026quot;)) sci_citations \u0026lt;- raw_html_sci %\u0026gt;% html_node(\u0026quot;#mw-content-text \u0026gt; div \u0026gt; div.reflist \u0026gt; div\u0026quot;) %\u0026gt;% html_nodes(\u0026quot;li\u0026quot;) %\u0026gt;% html_text() %\u0026gt;% str_remove(\u0026quot;\\\\^ \u0026quot;) %\u0026gt;% enframe() %\u0026gt;% rename(citation_num = name, citation = value) %\u0026gt;% mutate(citation = str_replace_all(citation, \u0026quot;\\\u0026quot;\u0026quot;, \u0026quot;\u0026#39;\u0026quot;), citation = str_remove_all(citation, \u0026quot;\\\\n\u0026quot;)) sci_citations clean_sci %\u0026gt;% add_row(tibble( name = \u0026quot;Amos, Harold\u0026quot;, birth = 1918, death = 2003, occupation_s = \u0026quot;Microbiologist\u0026quot;, inventions_accomplishments = \u0026quot;First African-American department chair at Harvard Medical School\u0026quot;, references = \u0026quot;6,\u0026quot;, links = \u0026quot;https://en.wikipedia.org/wiki/Harold_Amos\u0026quot;), .before = 1 ) write_csv(clean_sci, path = here(\u0026quot;2020/2020-06-09/science.csv\u0026quot;)) science \u0026lt;- read_csv(\u0026quot;2020/2020-06-09/science.csv\u0026quot;) first_url \u0026lt;- \u0026quot;https://en.wikipedia.org/wiki/List_of_African-American_firsts\u0026quot; raw_first \u0026lt;- read_html(first_url) get_year \u0026lt;- function(id_num) { raw_first %\u0026gt;% html_nodes(glue::glue(\u0026quot;#mw-content-text \u0026gt; div \u0026gt; h4:nth-child({id_num}) \u0026gt; span\u0026quot;)) %\u0026gt;% html_attr(\u0026quot;id\u0026quot;) %\u0026gt;% .[!is.na(.)] } get_first \u0026lt;- function(id_num){ raw_first %\u0026gt;% html_nodes(glue::glue(\u0026quot;#mw-content-text \u0026gt; div \u0026gt; ul:nth-child({id_num})\u0026quot;)) %\u0026gt;% html_text() %\u0026gt;% str_split(\u0026quot;\\n\u0026quot;) } tidyr::crossing(id_num = 9:389, count = 1:5) raw_first_df \u0026lt;- tibble(id_num = 9:390) %\u0026gt;% mutate(year = map(id_num, get_year), text = map(id_num, get_first)) clean_first \u0026lt;- raw_first_df %\u0026gt;% mutate(year = as.integer(year)) %\u0026gt;% fill(year) %\u0026gt;% unnest(text) %\u0026gt;% unnest(text) %\u0026gt;% separate(text, into = c(\u0026quot;role\u0026quot;, \u0026quot;person\u0026quot;), sep = \u0026quot;: \u0026quot;) %\u0026gt;% mutate(person = str_remove_all(person, \u0026quot;\\\\\\\\\u0026quot;), person = str_trim(person), role = str_replace(role, \u0026quot;African American\u0026quot;, \u0026quot;African-American\u0026quot;)) %\u0026gt;% select(year, role, person) clean_first %\u0026gt;% group_by(year) %\u0026gt;% summarize(n =n()) first_role \u0026lt;- function(category){ str_detect(tolower(role), category) } edu \u0026lt;- paste0(c( \u0026quot;practice\u0026quot;, \u0026quot;graduate\u0026quot;, \u0026quot;learning\u0026quot;, \u0026quot;college\u0026quot;, \u0026quot;university\u0026quot;, \u0026quot;medicine\u0026quot;, \u0026quot;earn\u0026quot;, \u0026quot;ph.d.\u0026quot;, \u0026quot;professor\u0026quot;, \u0026quot;teacher\u0026quot;, \u0026quot;school\u0026quot;, \u0026quot;nobel\u0026quot;, \u0026quot;invent\u0026quot;, \u0026quot;patent\u0026quot;, \u0026quot;medicine\u0026quot;, \u0026quot;degree\u0026quot;, \u0026quot;doctor\u0026quot;, \u0026quot;medical\u0026quot;, \u0026quot;nurse\u0026quot;, \u0026quot;physician\u0026quot;, \u0026quot;m.d.\u0026quot;, \u0026quot;b.a.\u0026quot;, \u0026quot;b.s.\u0026quot;, \u0026quot;m.b.a\u0026quot;, \u0026quot;principal\u0026quot;, \u0026quot;space\u0026quot;, \u0026quot;astronaut\u0026quot; ), collapse = \u0026quot;|\u0026quot;) religion \u0026lt;- c(\u0026quot;bishop\u0026quot;, \u0026quot;rabbi\u0026quot;, \u0026quot;minister\u0026quot;, \u0026quot;church\u0026quot;, \u0026quot;priest\u0026quot;, \u0026quot;pastor\u0026quot;, \u0026quot;missionary\u0026quot;, \u0026quot;denomination\u0026quot;, \u0026quot;jesus\u0026quot;, \u0026quot;jesuits\u0026quot;, \u0026quot;diocese\u0026quot;, \u0026quot;buddhis\u0026quot;) %\u0026gt;% paste0(collapse = \u0026quot;|\u0026quot;) politics \u0026lt;- c( \u0026quot;diplomat\u0026quot;, \u0026quot;elected\u0026quot;, \u0026quot;nominee\u0026quot;, \u0026quot;supreme court\u0026quot;, \u0026quot;legislature\u0026quot;, \u0026quot;mayor\u0026quot;, \u0026quot;governor\u0026quot;, \u0026quot;vice President\u0026quot;, \u0026quot;president\u0026quot;, \u0026quot;representatives\u0026quot;, \u0026quot;political\u0026quot;, \u0026quot;department\u0026quot;, \u0026quot;peace prize\u0026quot;, \u0026quot;ambassador\u0026quot;, \u0026quot;government\u0026quot;, \u0026quot;white house\u0026quot;, \u0026quot;postal\u0026quot;, \u0026quot;federal\u0026quot;, \u0026quot;union\u0026quot;, \u0026quot;trade\u0026quot;, \u0026quot;delegate\u0026quot;, \u0026quot;alder\u0026quot;, \u0026quot;solicitor\u0026quot;, \u0026quot;senator\u0026quot;, \u0026quot;intelligience\u0026quot;, \u0026quot;combat\u0026quot;, \u0026quot;commissioner\u0026quot;, \u0026quot;state\u0026quot;, \u0026quot;first lady\u0026quot;, \u0026quot;cabinet\u0026quot;, \u0026quot;advisor\u0026quot;, \u0026quot;guard\u0026quot;, \u0026quot;coast\u0026quot;, \u0026quot;secretary\u0026quot;, \u0026quot;senate\u0026quot;, \u0026quot;house\u0026quot;, \u0026quot;agency\u0026quot;, \u0026quot;staff\u0026quot;, \u0026quot;national committee\u0026quot; ) %\u0026gt;% paste0(collapse = \u0026quot;|\u0026quot;) sports \u0026lt;- c( \u0026quot;baseball\u0026quot;, \u0026quot;football\u0026quot;, \u0026quot;basketball\u0026quot;, \u0026quot;hockey\u0026quot;, \u0026quot;golf\u0026quot;, \u0026quot;tennis\u0026quot;, \u0026quot;championship\u0026quot;, \u0026quot;boxing\u0026quot;, \u0026quot;games\u0026quot;, \u0026quot;medal\u0026quot;, \u0026quot;game\u0026quot;, \u0026quot;sport\u0026quot;, \u0026quot;olympic\u0026quot;, \u0026quot;nascar\u0026quot;, \u0026quot;coach\u0026quot;, \u0026quot;trophy\u0026quot;, \u0026quot;nba\u0026quot;, \u0026quot;nhl\u0026quot;, \u0026quot;nfl\u0026quot;, \u0026quot;mlb\u0026quot;, \u0026quot;stanley cup\u0026quot;, \u0026quot;jockey\u0026quot;, \u0026quot;pga\u0026quot;, \u0026quot;race\u0026quot;, \u0026quot;driver\u0026quot;, \u0026quot;ufc\u0026quot;, \u0026quot;champion\u0026quot; ) %\u0026gt;% paste0(collapse = \u0026quot;|\u0026quot;) military \u0026lt;- c( \u0026quot;serve\u0026quot;, \u0026quot;military\u0026quot;, \u0026quot;enlist\u0026quot;, \u0026quot;officer\u0026quot;, \u0026quot;army\u0026quot;, \u0026quot;marine\u0026quot;, \u0026quot;naval\u0026quot;, \u0026quot;officer\u0026quot;, \u0026quot;captain\u0026quot;, \u0026quot;command\u0026quot;, \u0026quot;admiral\u0026quot;, \u0026quot;prison\u0026quot;, \u0026quot;navy\u0026quot;, \u0026quot;general\u0026quot;, \u0026quot;force\u0026quot; ) %\u0026gt;% paste0(collapse = \u0026quot;|\u0026quot;) law \u0026lt;- c(\u0026quot;american bar\u0026quot;, \u0026quot;lawyer\u0026quot;, \u0026quot;police\u0026quot;, \u0026quot;judge\u0026quot;, \u0026quot;attorney\u0026quot;, \u0026quot;law\u0026quot;, \u0026quot;agent\u0026quot;, \u0026quot;fbi\u0026quot;) %\u0026gt;% paste0(collapse = \u0026quot;|\u0026quot;) arts \u0026lt;- c( \u0026quot;opera\u0026quot;, \u0026quot;sing\u0026quot;, \u0026quot;perform\u0026quot;, \u0026quot;music\u0026quot;, \u0026quot;billboard\u0026quot;, \u0026quot;oscar\u0026quot;, \u0026quot;television\u0026quot;, \u0026quot;movie\u0026quot;, \u0026quot;network\u0026quot;, \u0026quot;tony award\u0026quot;, \u0026quot;paint\u0026quot;, \u0026quot;author\u0026quot;, \u0026quot;book\u0026quot;, \u0026quot;academy award\u0026quot;, \u0026quot;curator\u0026quot;, \u0026quot;director\u0026quot;, \u0026quot;publish\u0026quot;, \u0026quot;novel\u0026quot;, \u0026quot;grammy\u0026quot;, \u0026quot;emmy\u0026quot;, \u0026quot;smithsonian\u0026quot;, \u0026quot;conduct\u0026quot;, \u0026quot;picture\u0026quot;, \u0026quot;pulitzer\u0026quot;, \u0026quot;channel\u0026quot;, \u0026quot;villain\u0026quot;, \u0026quot;cartoon\u0026quot;, \u0026quot;tv\u0026quot;, \u0026quot;golden globe\u0026quot;, \u0026quot;comic\u0026quot;, \u0026quot;magazine\u0026quot;, \u0026quot;superhero\u0026quot;, \u0026quot;pulitzer\u0026quot;, \u0026quot;dancer\u0026quot;, \u0026quot;opry\u0026quot;, \u0026quot;rock and roll\u0026quot;, \u0026quot;radio\u0026quot;, \u0026quot;record\u0026quot;) %\u0026gt;% paste0(collapse = \u0026quot;|\u0026quot;) social \u0026lt;- c(\u0026quot;community\u0026quot;, \u0026quot;freemasons\u0026quot;, \u0026quot;vote\u0026quot;, \u0026quot;voting\u0026quot;, \u0026quot;rights\u0026quot;, \u0026quot;signature\u0026quot;, \u0026quot;royal\u0026quot;, \u0026quot;ceo\u0026quot;, \u0026quot;community\u0026quot;, \u0026quot;movement\u0026quot;, \u0026quot;invited\u0026quot;, \u0026quot;greek\u0026quot;, \u0026quot;million\u0026quot;, \u0026quot;billion\u0026quot;, \u0026quot;attendant\u0026quot;, \u0026quot;chess\u0026quot;, \u0026quot;pilot\u0026quot;, \u0026quot;playboy\u0026quot;, \u0026quot;own\u0026quot;, \u0026quot;daughter\u0026quot;, \u0026quot;coin\u0026quot;, \u0026quot;dollar\u0026quot;, \u0026quot;stamp\u0026quot;, \u0026quot;niagara\u0026quot;, \u0026quot;stock\u0026quot;, \u0026quot;north pole\u0026quot;, \u0026quot;reporter\u0026quot;, \u0026quot;sail around the world\u0026quot;, \u0026quot;press\u0026quot;, \u0026quot;miss \u0026quot;, \u0026quot;everest\u0026quot;) %\u0026gt;% paste0(collapse = \u0026quot;|\u0026quot;) first_df \u0026lt;- clean_first %\u0026gt;% mutate(gender = if_else(str_detect(role, \u0026quot;woman|Woman|her|she|female\u0026quot;), \u0026quot;Female African American Firsts\u0026quot;, \u0026quot;African-American Firsts\u0026quot;), role = str_remove_all(role, \u0026quot;\\\u0026quot;\u0026quot;), person = str_remove_all(person, \u0026quot;\\\u0026quot;\u0026quot;), category = case_when( str_detect(tolower(role), military) ~ \u0026quot;Military\u0026quot;, str_detect(tolower(role), law) ~ \u0026quot;Law\u0026quot;, str_detect(tolower(role), arts) ~ \u0026quot;Arts \u0026amp; Entertainment\u0026quot;, str_detect(tolower(role), social) ~ \u0026quot;Social \u0026amp; Jobs\u0026quot;, str_detect(tolower(role), religion) ~ \u0026quot;Religion\u0026quot;, str_detect(tolower(role), edu) ~ \u0026quot;Education \u0026amp; Science\u0026quot;, str_detect(tolower(role), politics) ~ \u0026quot;Politics\u0026quot;, str_detect(tolower(role), sports) ~ \u0026quot;Sports\u0026quot;, TRUE ~ NA_character_ )) %\u0026gt;% rename(accomplishment = role) first_df %\u0026gt;% write_csv(path = \u0026quot;2020/2020-06-09/firsts.csv\u0026quot;) firsts \u0026lt;- read_csv(\u0026quot;2020/2020-06-09/firsts.csv\u0026quot;) plot_ex \u0026lt;- first_df %\u0026gt;% mutate(n = 1) %\u0026gt;% group_by(category) %\u0026gt;% mutate(roll_n = cumsum(n)) %\u0026gt;% ggplot(aes(x = year, y = roll_n, color = category)) + geom_step(size = 1) + theme(legend.position = \u0026quot;top\u0026quot;) + tomtom::theme_tomtom() + scale_y_continuous(breaks = scales::pretty_breaks(n = 6)) + scale_x_continuous(breaks = seq(1750, 2020, 25)) + geom_hline(yintercept = 0, size = 1, color = \u0026quot;black\u0026quot;) + labs(x = \u0026quot;\u0026quot;, y = \u0026quot;\u0026quot;, title = \u0026quot;Cumulative African-Americans firsts over time\u0026quot;, subtitle = \u0026quot;479 \u0026#39;Firsts\u0026#39; of African-Americans breaking the color barrier across a wide range of topics\u0026quot;, caption = \u0026quot;Data: wikipedia.org/wiki/List_of_African-American_firsts\u0026quot;) ggsave(\u0026quot;2020/2020-06-09/pic2.png\u0026quot;, plot_ex, height = 8, width = 14, units = \u0026quot;in\u0026quot;, dpi = \u0026quot;retina\u0026quot;)  IV. Look at Data #use head(), str(), class(), View(), etc. to see what the tables look like head(science) ## # A tibble: 6 x 7 ## name birth death occupation_s inventions_accomplish… references links ## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 Amos, … 1918 2003 Microbiologi… First African-America… 6, https://e… ## 2 Alcorn… 1940 NA Physicist; i… Invented a method of … 7,8, https://e… ## 3 Andrew… 1930 1998 Mathematician Put forth the Andrews… 9, https://e… ## 4 Alexan… 1888 1958 Civil engine… Responsible for the c… \u0026lt;NA\u0026gt; https://e… ## 5 Bailey… 1825 1918 Inventor Folding bed 10, https://e… ## 6 Ball, … 1892 1916 Chemist Extracted chaulmoogra… 11, https://e… head(firsts) ## # A tibble: 6 x 5 ## year accomplishment person gender category ## \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 1738 First free African-Ameri… Gracia Real de Santa … African-Ame… Social \u0026amp; … ## 2 1760 First known African-Amer… Jupiter Hammon (poem … Female Afri… Arts \u0026amp; En… ## 3 1768 First known African-Amer… Wentworth Cheswell, t… African-Ame… Social \u0026amp; … ## 4 1773 First known African-Amer… Phillis Wheatley (Poe… Female Afri… Arts \u0026amp; En… ## 5 1773 First separate African-A… Silver Bluff Baptist … African-Ame… Religion ## 6 1775 First African-American t… Prince Hall African-Ame… Social \u0026amp; …  V. Plots science %\u0026lt;\u0026gt;% filter(!is.na(death)) science %\u0026gt;% ggplot(aes(x = birth, y = 0, label = name)) + geom_point()  ","date":1592956800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592956800,"objectID":"f8da5a9d6104a9f2a55743c26c7a15b6","permalink":"/sessions/tidy-tuesday-black-lives-matter/","publishdate":"2020-06-24T00:00:00Z","relpermalink":"/sessions/tidy-tuesday-black-lives-matter/","section":"sessions","summary":"This workflow uses the African American Achievements Tidy Tuesday dataset, downloaded June 24, 2020, for the purposes of learning and education on the intersection of racial matters and data science.","tags":["tidyverse"],"title":"Tidy Tuesday: Black lives Matter","type":"sessions"},{"authors":null,"categories":["Introductions"],"content":" In this section we’ll post blog-style documents where we discuss very specific topics!  ","date":1592784000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592784000,"objectID":"da7921a79adabff4a95770c32d528c98","permalink":"/post/first-post/","publishdate":"2020-06-22T00:00:00Z","relpermalink":"/post/first-post/","section":"post","summary":" In this section we’ll post blog-style documents where we discuss very specific topics!  ","tags":[],"title":"First Post!","type":"post"},{"authors":null,"categories":["Statistics","TidyTuesday"],"content":" Setting Up library(tidyverse) library(tidymodels) #This will read the marbles.csv directly into your environment --\u0026gt; marbles \u0026lt;- readr::read_csv(\u0026#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-02/marbles.csv\u0026#39;)  Reviewing Last Week In our previous sesion we did some exploratory data analysis of last week’s TidyTuesday data set which had race information from the previous season of Jelle’s Marble Runs. The data included information on the place of each marble in the 8 races of the season, individual marble names, lap times, and the number of points earned for finishing place.\nWe took the data that was provided and we used a few data wrangling tricks to add five additional columns. The first two columns, points_sum and points_cum tracked the total number of points earned by a team at the end of the season and the cumulative points earned after each race. These two additional columns allowed us to then calculate the rank of each team at the end of a race, and the final overall rank of the teams at the end of the season.\nWe also added a column that just lists the race number (race_num) instead of the “S#R#” format used by the dataset and another that contains abbreviated team names (team_abbr).\nmarbles_rank \u0026lt;- marbles %\u0026gt;% select(race, marble_name, team_name, points, time_s, pole) %\u0026gt;% #Selects a specific subset of columns filter(str_detect(race, \u0026quot;R\u0026quot;)) %\u0026gt;% #Filters the rows of your data.frame to only include races that determine end of season ranking group_by(race, team_name) %\u0026gt;% summarize(points = unique(points)) %\u0026gt;% group_by(team_name) %\u0026gt;% arrange(team_name, race) %\u0026gt;% mutate( #this step adds to new columns called points_sum and points_cumulative points_sum = sum(points), #total points at the end of the season points_cumulative = cumsum(points) #The sum of points for a team after each race ) %\u0026gt;% group_by(race) %\u0026gt;% arrange(-points_cumulative, points_sum) %\u0026gt;% #sort your rows so that the highest scoring team is at the top mutate(rank = row_number()) %\u0026gt;% #calculate rank based on row_number of a team ungroup() %\u0026gt;% #we\u0026#39;ve grouped a lot of data here but be sure to ungroup it all before doing any kind of plotting! You\u0026#39;ll get some funky looking figures mutate( #here we\u0026#39;re adding two new columns and changing the factor levels of another race_num = as.numeric(str_remove(race, \u0026quot;S1R\u0026quot;)), #making a column that just lists the race number team_name = fct_reorder(team_name, -points_sum), #This is reordering the factor levels of the team_name column. I can go into a deeper explanation in our next session team_abbr = case_when( #since the team names are long and will make a plot misshapen, we\u0026#39;re going to make a column with team abbreviations team_name == \u0026quot;Savage Speeders\u0026quot; ~ \u0026quot;SAV\u0026quot;, team_name == \u0026quot;Hazers\u0026quot; ~ \u0026quot;HAZ\u0026quot;, team_name == \u0026quot;O\u0026#39;rangers\u0026quot; ~ \u0026quot;ORA\u0026quot;, team_name == \u0026quot;Snowballs\u0026quot; ~ \u0026quot;SNO\u0026quot;, team_name == \u0026quot;Green Ducks\u0026quot; ~ \u0026quot;GDK\u0026quot;, team_name == \u0026quot;Team Galactic\u0026quot; ~ \u0026quot;TGL\u0026quot;, team_name == \u0026quot;Team Primary\u0026quot; ~ \u0026quot;TPR\u0026quot;, team_name == \u0026quot;Team Momo\u0026quot; ~ \u0026quot;TMO\u0026quot;, team_name == \u0026quot;Thunderbolts\u0026quot; ~ \u0026quot;TDB\u0026quot;, team_name == \u0026quot;Balls of Chaos\u0026quot; ~ \u0026quot;BOC\u0026quot;, team_name == \u0026quot;Mellow Yellow\u0026quot; ~ \u0026quot;MYL\u0026quot;, team_name == \u0026quot;Midnight Wisps\u0026quot; ~ \u0026quot;MNW\u0026quot;, team_name == \u0026quot;Rojo Rollers\u0026quot; ~ \u0026quot;RJR\u0026quot;, team_name == \u0026quot;Raspberry Racers\u0026quot; ~ \u0026quot;RBR\u0026quot;, team_name == \u0026quot;Limers\u0026quot; ~ \u0026quot;LMR\u0026quot;, team_name == \u0026quot;Hornets\u0026quot; ~ \u0026quot;HOR\u0026quot; ) ) After we cleaned our data I used a plotting workflow I found on GitHub to generate our final figure: This figure nicely illustrates how team rankings changed from race to race. But after seeing how drastically some of the rankings changed over the course of the season, I was left with some questions:\nHow important is the final race in determining a team’s overall ranking for the season?\n Does performance in the initial race predict performance in the final race (and rank at the end of the season)?\n How does starting position affect finishing place in a race?\n  Today, we’re going to try to answer all of these questions using a relationship modeling method called Linear Regression.\n Linear Regression Before we dive into the regression analysis there is a bit more data wrangling that we need to do. First I want to make sure that I have the starting position (pole in the data) of each marble for each race, which is determined by their qualifying lap time. The pole position is only listed in the qualifying race rows while all the other information I care about is in the actual race rows. I need to remedy that before I move on.\n####USE INNERJOIN HERE ALONG WITH THIS METHOD quals \u0026lt;- marbles %\u0026gt;% select(race, team_name, marble_name, points, time_s, pole, site) %\u0026gt;% filter(str_detect(race, \u0026quot;Q\u0026quot;)) %\u0026gt;% group_by(race, team_name) %\u0026gt;% arrange(race, team_name) start_and_finish \u0026lt;- marbles_rank %\u0026gt;% arrange(race, as.character(team_name)) %\u0026gt;% mutate(start_pos = as.numeric(str_remove(quals$pole, \u0026quot;P\u0026quot;)), site = quals$site) Table 1: Race Data with Starting Position    race team_name points points_sum points_cumulative rank race_num team_abbr start_pos site    S1R1 Balls of Chaos 0 46 0 14 1 BOC 15 Savage Speedway  S1R1 Green Ducks 4 64 4 8 1 GDK 10 Savage Speedway  S1R1 Hazers 18 94 18 2 1 HAZ 9 Savage Speedway  S1R1 Hornets 0 8 0 11 1 HOR 8 Savage Speedway  S1R1 Limers 0 25 0 12 1 LMR 14 Savage Speedway  S1R1 Mellow Yellow 2 44 2 9 1 MYL 4 Savage Speedway     Visual Exploration Before we start throwing linear regression models around whilly nilly lets take a look at the relationships we want to model. This serves a dual purpose: 1) it allows us to literally see the relationships we want to analyze, and 2) it gives us an opportunity to explore other relationships we might not have previously considered examining.\nWhat does it look like when we plot all the races together? start_and_finish %\u0026gt;% ggplot(aes(start_pos, rank)) + geom_point(aes(color = team_abbr)) + geom_smooth(method = \u0026quot;lm\u0026quot;, se = FALSE) + labs(x = \u0026quot;Starting Position\u0026quot;, y = \u0026quot;Finishing Place\u0026quot;, color = \u0026quot;Team\u0026quot;) ## `geom_smooth()` using formula \u0026#39;y ~ x\u0026#39; Not the cleanest linear relationship I’ve ever seen… but let’s build a model and see!\nTo do this we’re going to use a new family of “tidy” packages called tidymodels. Like the tidyverse this collection of functions make doing statistical analyses and modeling easier, the syntax more intuitive, and the output cleaner. This is very new to me so we’ll be learning this functions together!\nFirst we’ll need to define teh model that we care about. In this case we want to model how starting or pole position affects a marble’s finishing rank in the race:\n#First let\u0026#39;s define the model we care about rank ~ start_pos ## rank ~ start_pos We’ve seen the tilde before. In this case we’re using it to create a model object and we can read it as rank depends on starting position.\nTo define the methodology we want to use we’ll implement some functions from the parsnip package. This package takes model building and lets you organically define the various parameters without having to deal with the clunky base R functions. Stay tuned for future sessions when this definition gets better!\n#We want to specify our model type by declaring it: linear_reg() ## Linear Regression Model Specification (regression) Doing this really has no functionality. Its akin to just typing ggplot. It just provides important information that downstream functions need to plot properly but doesn’t do anything itself.\nTo define the thing that will be fitting the model we need to specify and engine. We’ll be using the lm engine:\nlinear_reg() %\u0026gt;% set_engine(\u0026quot;lm\u0026quot;) ## Linear Regression Model Specification (regression) ## ## Computational engine: lm And we can save this as a model object which we’ll call lm_rank_mod.\nlm_rank_mod \u0026lt;- linear_reg() %\u0026gt;% set_engine(\u0026quot;lm\u0026quot;) Now we can actually fit our model by passing our model object to the fit function:\nlm_rank_fit \u0026lt;- lm_rank_mod %\u0026gt;% fit(rank ~ start_pos, data = start_and_finish) lm_rank_fit ## parsnip model object ## ## Fit time: 2ms ## ## Call: ## stats::lm(formula = rank ~ start_pos, data = data) ## ## Coefficients: ## (Intercept) start_pos ## 6.1500 0.2765 This is great! We were able to fit the model and we have a coefficient out for starting position. This output doesn’t tell us anything important about this relationship though. To get something a little more informative we’re going to use the tidy() function from the yardstick package which creates a more informative and cleaner output of the model results:\ntidy(lm_rank_fit) ## # A tibble: 2 x 5 ## term estimate std.error statistic p.value ## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 (Intercept) 6.15 0.828 7.43 1.45e-11 ## 2 start_pos 0.276 0.0856 3.23 1.58e- 3 From this output we can see that the starting position does have an effect on finishing place and it is significant!\nAll other variables held constant, if a marble with a starting position one place better than a competitor will finish .27 places ahead of that competitor\nWhich is more than enough to eek out a win! But this model looks at one variable, pole position, and assumes all other variables are constant… which they aren’t.\nEach race is held at a different location and with different racers and that introduces a lot of confounding variables into the equation. So while there is a significant effect with starting position, we might also want to consider the race location as well. Let’s do some exploratory data visualization and see!\n Let’s start by examining the relationshiop in race 1. We want to query the relationship between starting position and final place. start_and_finish %\u0026gt;% filter(race_num == 1) %\u0026gt;% ggplot(aes(start_pos, rank)) + geom_point(aes(color = team_abbr)) + geom_smooth(method = \u0026quot;lm\u0026quot;, se = FALSE) + labs(x = \u0026quot;Starting Position\u0026quot;, y = \u0026quot;Finishing Place\u0026quot;, color = \u0026quot;Team\u0026quot;) ## `geom_smooth()` using formula \u0026#39;y ~ x\u0026#39; That looks about as strong a relationship as we saw plotting all the races together. Does that linearly relationship hold up across all of the races?\n Let’s look at the relationship between starting position and final placement in all of the races. start_and_finish %\u0026gt;% ggplot(aes(start_pos, rank)) + geom_point(aes(color = team_abbr)) + #geom_abline() + geom_smooth(method=\u0026#39;lm\u0026#39;, formula = y ~ x, se = FALSE) + facet_wrap(~fct_inorder(site), nrow = 2, ncol = 4) + labs(x = \u0026quot;Starting Position\u0026quot;, y = \u0026quot;Finishing Position\u0026quot;, color = \u0026quot;Team\u0026quot;, title = \u0026quot;Examining the relationship between Pole Position and Finishing Place\u0026quot;) This plot, in addition to the zoomed in single race plot, is a great visualization of the linear relationships between starting and ending place in each race. Just looking at this figure we can see that the linear relationship between starting and finishing positions varies drastically. Let’s add race number into our model.\n#Define the model formula we want to analyze: rank ~ start_pos + site + site*start_pos This is a more complicated formula than last time! Not only do we want to consider race_number as its own explanatory variable, we also want to see if there is an interaction effect between starting position and race number which is indicated by the *.\nBefore we can run this model however, we need to convert the “Race” location to a numeric variable so that we can us it in the linear model. This variable has 8 different categories which we need to code into something called a dummy variable. Categorical variables have to be coded as 1 or 0 if you’re transferring it to a numeric value. So when working with something with more variables R has to build something called a contrast matrix. Check out the example in this article.\nTo make this contrast matrix we’ll be implementing the recipes package which has several tools for building models incrementally and with intent. fAll a recipe does is specify what exactly should be done with the data. It doesn’t actually do any kind of calculations!\nmarbles_rank_rec \u0026lt;- recipe(rank ~ start_pos + site, data = start_and_finish) %\u0026gt;% step_dummy(all_nominal(), -all_outcomes()) %\u0026gt;% step_interact(terms = ~ starts_with(\u0026quot;site_\u0026quot;):start_pos) Now that we have our recipe we can build our model and fit it:\n#Next, construct your model object lm_rank_mod_start_pos_race_num \u0026lt;- linear_reg() %\u0026gt;% set_engine(\u0026quot;lm\u0026quot;) marbles_rank_wkflow \u0026lt;- workflow() %\u0026gt;% add_model(lm_rank_mod_start_pos_race_num) %\u0026gt;% add_recipe(marbles_rank_rec) marbles_rank_wkflow ## ══ Workflow ════════════════════════════════════════════════════════════════════════════════════════════ ## Preprocessor: Recipe ## Model: linear_reg() ## ## ── Preprocessor ──────────────────────────────────────────────────────────────────────────────────────── ## 2 Recipe Steps ## ## ● step_dummy() ## ● step_interact() ## ## ── Model ─────────────────────────────────────────────────────────────────────────────────────────────── ## Linear Regression Model Specification (regression) ## ## Computational engine: lm marbles_rank_fit \u0026lt;- marbles_rank_wkflow %\u0026gt;% fit(data = start_and_finish) marbles_rank_fit %\u0026gt;% pull_workflow_fit() %\u0026gt;% tidy() ## # A tibble: 16 x 5 ## term estimate std.error statistic p.value ## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 (Intercept) 8.15 2.44 3.35 0.00112 ## 2 start_pos 0.0412 0.252 0.163 0.870 ## 3 site_Hivedrive -2.5 3.44 -0.726 0.469 ## 4 site_Midnight.Bay -1.43 3.44 -0.414 0.680 ## 5 site_Momotorway -5.03 3.44 -1.46 0.147 ## 6 site_O.raceway -1.93 3.44 -0.559 0.577 ## 7 site_Razzway -2.4 3.44 -0.697 0.487 ## 8 site_Savage.Speedway -3.05 3.44 -0.885 0.378 ## 9 site_Short.Circuit 0.325 3.44 0.0944 0.925 ## 10 site_Hivedrive_x_start_pos 0.294 0.356 0.826 0.411 ## 11 site_Midnight.Bay_x_start_pos 0.168 0.356 0.471 0.639 ## 12 site_Momotorway_x_start_pos 0.591 0.356 1.66 0.0998 ## 13 site_O.raceway_x_start_pos 0.226 0.356 0.636 0.526 ## 14 site_Razzway_x_start_pos 0.282 0.356 0.793 0.430 ## 15 site_Savage.Speedway_x_start_pos 0.359 0.356 1.01 0.316 ## 16 site_Short.Circuit_x_start_pos -0.0382 0.356 -0.107 0.915 Now that we consider starting position, the site of the race, and the interaction of those two, the previous significant effect of starting position disappears. Adding these extra terms changes how each of the coefficients are interpreted. When only one variable is considered (starting position) in a simple regression, that variable is considered to be the sole effector of the response variable. But when we include other relevant information about the races we see that starting position doesn’t have that much of an effect on the finishing place of a team in race.\n  ","date":1592784000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592784000,"objectID":"d0c07ac0944eed4a9502117a6732e088","permalink":"/sessions/linear-regression-with-the-marbles-dataset/","publishdate":"2020-06-22T00:00:00Z","relpermalink":"/sessions/linear-regression-with-the-marbles-dataset/","section":"sessions","summary":"Setting Up library(tidyverse) library(tidymodels) #This will read the marbles.csv directly into your environment --\u0026gt; marbles \u0026lt;- readr::read_csv(\u0026#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-06-02/marbles.csv\u0026#39;)  Reviewing Last Week In our previous sesion we did some exploratory data analysis of last week’s TidyTuesday data set which had race information from the previous season of Jelle’s Marble Runs.","tags":["tidymodels","tidyverse"],"title":"Linear Regression with the Marbles Dataset","type":"sessions"},{"authors":null,"categories":["TidyTuesday"],"content":" library(tidyverse) ## ── Attaching packages ─────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.2 ✓ purrr 0.3.4 ## ✓ tibble 3.0.2 ✓ dplyr 1.0.0 ## ✓ tidyr 1.1.0 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(ggplot2) library(schrute) This R Markdown was created for the UVM Student Data Science Core group for an informational session on data visualization. The code reflects real time explanations and questions, and therefore is not cleaned up.\nWeek 2: Data wrangling\n#read in office data from IBDM IMDB.data \u0026lt;- readr::read_csv(\u0026#39;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-17/office_ratings.csv\u0026#39;) ## Parsed with column specification: ## cols( ## season = col_double(), ## episode = col_double(), ## title = col_character(), ## imdb_rating = col_double(), ## total_votes = col_double(), ## air_date = col_date(format = \u0026quot;\u0026quot;) ## ) #read in office data from schrute package schrute.data \u0026lt;- schrute::theoffice #three different ways to visualize the tables str(IMDB.data) ## tibble [188 × 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame) ## $ season : num [1:188] 1 1 1 1 1 1 2 2 2 2 ... ## $ episode : num [1:188] 1 2 3 4 5 6 1 2 3 4 ... ## $ title : chr [1:188] \u0026quot;Pilot\u0026quot; \u0026quot;Diversity Day\u0026quot; \u0026quot;Health Care\u0026quot; \u0026quot;The Alliance\u0026quot; ... ## $ imdb_rating: num [1:188] 7.6 8.3 7.9 8.1 8.4 7.8 8.7 8.2 8.4 8.4 ... ## $ total_votes: num [1:188] 3706 3566 2983 2886 3179 ... ## $ air_date : Date[1:188], format: \u0026quot;2005-03-24\u0026quot; \u0026quot;2005-03-29\u0026quot; ... ## - attr(*, \u0026quot;spec\u0026quot;)= ## .. cols( ## .. season = col_double(), ## .. episode = col_double(), ## .. title = col_character(), ## .. imdb_rating = col_double(), ## .. total_votes = col_double(), ## .. air_date = col_date(format = \u0026quot;\u0026quot;) ## .. ) str(schrute.data) ## tibble [55,130 × 12] (S3: tbl_df/tbl/data.frame) ## $ index : int [1:55130] 1 2 3 4 5 6 7 8 9 10 ... ## $ season : int [1:55130] 1 1 1 1 1 1 1 1 1 1 ... ## $ episode : int [1:55130] 1 1 1 1 1 1 1 1 1 1 ... ## $ episode_name : chr [1:55130] \u0026quot;Pilot\u0026quot; \u0026quot;Pilot\u0026quot; \u0026quot;Pilot\u0026quot; \u0026quot;Pilot\u0026quot; ... ## $ director : chr [1:55130] \u0026quot;Ken Kwapis\u0026quot; \u0026quot;Ken Kwapis\u0026quot; \u0026quot;Ken Kwapis\u0026quot; \u0026quot;Ken Kwapis\u0026quot; ... ## $ writer : chr [1:55130] \u0026quot;Ricky Gervais;Stephen Merchant;Greg Daniels\u0026quot; \u0026quot;Ricky Gervais;Stephen Merchant;Greg Daniels\u0026quot; \u0026quot;Ricky Gervais;Stephen Merchant;Greg Daniels\u0026quot; \u0026quot;Ricky Gervais;Stephen Merchant;Greg Daniels\u0026quot; ... ## $ character : chr [1:55130] \u0026quot;Michael\u0026quot; \u0026quot;Jim\u0026quot; \u0026quot;Michael\u0026quot; \u0026quot;Jim\u0026quot; ... ## $ text : chr [1:55130] \u0026quot;All right Jim. Your quarterlies look very good. How are things at the library?\u0026quot; \u0026quot;Oh, I told you. I couldn\u0026#39;t close it. So...\u0026quot; \u0026quot;So you\u0026#39;ve come to the master for guidance? Is this what you\u0026#39;re saying, grasshopper?\u0026quot; \u0026quot;Actually, you called me in here, but yeah.\u0026quot; ... ## $ text_w_direction: chr [1:55130] \u0026quot;All right Jim. Your quarterlies look very good. How are things at the library?\u0026quot; \u0026quot;Oh, I told you. I couldn\u0026#39;t close it. So...\u0026quot; \u0026quot;So you\u0026#39;ve come to the master for guidance? Is this what you\u0026#39;re saying, grasshopper?\u0026quot; \u0026quot;Actually, you called me in here, but yeah.\u0026quot; ... ## $ imdb_rating : num [1:55130] 7.6 7.6 7.6 7.6 7.6 7.6 7.6 7.6 7.6 7.6 ... ## $ total_votes : int [1:55130] 3706 3706 3706 3706 3706 3706 3706 3706 3706 3706 ... ## $ air_date : Factor w/ 184 levels \u0026quot;2005-03-24\u0026quot;,\u0026quot;2005-03-29\u0026quot;,..: 1 1 1 1 1 1 1 1 1 1 ... head(IMDB.data) ## # A tibble: 6 x 6 ## season episode title imdb_rating total_votes air_date ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;date\u0026gt; ## 1 1 1 Pilot 7.6 3706 2005-03-24 ## 2 1 2 Diversity Day 8.3 3566 2005-03-29 ## 3 1 3 Health Care 7.9 2983 2005-04-05 ## 4 1 4 The Alliance 8.1 2886 2005-04-12 ## 5 1 5 Basketball 8.4 3179 2005-04-19 ## 6 1 6 Hot Girl 7.8 2852 2005-04-26 head(schrute.data) ## # A tibble: 6 x 12 ## index season episode episode_name director writer character text ## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 1 1 1 Pilot Ken Kwa… Ricky… Michael All … ## 2 2 1 1 Pilot Ken Kwa… Ricky… Jim Oh, … ## 3 3 1 1 Pilot Ken Kwa… Ricky… Michael So y… ## 4 4 1 1 Pilot Ken Kwa… Ricky… Jim Actu… ## 5 5 1 1 Pilot Ken Kwa… Ricky… Michael All … ## 6 6 1 1 Pilot Ken Kwa… Ricky… Michael Yes,… ## # … with 4 more variables: text_w_direction \u0026lt;chr\u0026gt;, imdb_rating \u0026lt;dbl\u0026gt;, ## # total_votes \u0026lt;int\u0026gt;, air_date \u0026lt;fct\u0026gt; glimpse(IMDB.data) ## Rows: 188 ## Columns: 6 ## $ season \u0026lt;dbl\u0026gt; 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, … ## $ episode \u0026lt;dbl\u0026gt; 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, … ## $ title \u0026lt;chr\u0026gt; \u0026quot;Pilot\u0026quot;, \u0026quot;Diversity Day\u0026quot;, \u0026quot;Health Care\u0026quot;, \u0026quot;The Alliance\u0026quot;, … ## $ imdb_rating \u0026lt;dbl\u0026gt; 7.6, 8.3, 7.9, 8.1, 8.4, 7.8, 8.7, 8.2, 8.4, 8.4, 8.2, 8.… ## $ total_votes \u0026lt;dbl\u0026gt; 3706, 3566, 2983, 2886, 3179, 2852, 3213, 2736, 2742, 271… ## $ air_date \u0026lt;date\u0026gt; 2005-03-24, 2005-03-29, 2005-04-05, 2005-04-12, 2005-04-… glimpse(schrute.data) ## Rows: 55,130 ## Columns: 12 ## $ index \u0026lt;int\u0026gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1… ## $ season \u0026lt;int\u0026gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ episode \u0026lt;int\u0026gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ## $ episode_name \u0026lt;chr\u0026gt; \u0026quot;Pilot\u0026quot;, \u0026quot;Pilot\u0026quot;, \u0026quot;Pilot\u0026quot;, \u0026quot;Pilot\u0026quot;, \u0026quot;Pilot\u0026quot;, \u0026quot;Pilot\u0026quot;… ## $ director \u0026lt;chr\u0026gt; \u0026quot;Ken Kwapis\u0026quot;, \u0026quot;Ken Kwapis\u0026quot;, \u0026quot;Ken Kwapis\u0026quot;, \u0026quot;Ken Kwapi… ## $ writer \u0026lt;chr\u0026gt; \u0026quot;Ricky Gervais;Stephen Merchant;Greg Daniels\u0026quot;, \u0026quot;Rick… ## $ character \u0026lt;chr\u0026gt; \u0026quot;Michael\u0026quot;, \u0026quot;Jim\u0026quot;, \u0026quot;Michael\u0026quot;, \u0026quot;Jim\u0026quot;, \u0026quot;Michael\u0026quot;, \u0026quot;Mich… ## $ text \u0026lt;chr\u0026gt; \u0026quot;All right Jim. Your quarterlies look very good. How… ## $ text_w_direction \u0026lt;chr\u0026gt; \u0026quot;All right Jim. Your quarterlies look very good. How… ## $ imdb_rating \u0026lt;dbl\u0026gt; 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.6, 7.… ## $ total_votes \u0026lt;int\u0026gt; 3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706, 3706… ## $ air_date \u0026lt;fct\u0026gt; 2005-03-24, 2005-03-24, 2005-03-24, 2005-03-24, 2005… #who are all the writers distinct(schrute.data, writer) ## # A tibble: 47 x 1 ## writer ## \u0026lt;chr\u0026gt; ## 1 Ricky Gervais;Stephen Merchant;Greg Daniels ## 2 B.J. Novak ## 3 Paul Lieberstein ## 4 Michael Schur ## 5 Greg Daniels ## 6 Mindy Kaling ## 7 Gene Stupnitsky;Lee Eisenberg ## 8 Larry Willmore ## 9 Jennifer Celotta ## 10 Lee Eisenberg;Gene Stupnitsky ## # … with 37 more rows select(schrute.data, writer) ## # A tibble: 55,130 x 1 ## writer ## \u0026lt;chr\u0026gt; ## 1 Ricky Gervais;Stephen Merchant;Greg Daniels ## 2 Ricky Gervais;Stephen Merchant;Greg Daniels ## 3 Ricky Gervais;Stephen Merchant;Greg Daniels ## 4 Ricky Gervais;Stephen Merchant;Greg Daniels ## 5 Ricky Gervais;Stephen Merchant;Greg Daniels ## 6 Ricky Gervais;Stephen Merchant;Greg Daniels ## 7 Ricky Gervais;Stephen Merchant;Greg Daniels ## 8 Ricky Gervais;Stephen Merchant;Greg Daniels ## 9 Ricky Gervais;Stephen Merchant;Greg Daniels ## 10 Ricky Gervais;Stephen Merchant;Greg Daniels ## # … with 55,120 more rows filter(schrute.data, episode == 1) ## # A tibble: 2,643 x 12 ## index season episode episode_name director writer character text ## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 1 1 1 Pilot Ken Kwa… Ricky… Michael All … ## 2 2 1 1 Pilot Ken Kwa… Ricky… Jim Oh, … ## 3 3 1 1 Pilot Ken Kwa… Ricky… Michael So y… ## 4 4 1 1 Pilot Ken Kwa… Ricky… Jim Actu… ## 5 5 1 1 Pilot Ken Kwa… Ricky… Michael All … ## 6 6 1 1 Pilot Ken Kwa… Ricky… Michael Yes,… ## 7 7 1 1 Pilot Ken Kwa… Ricky… Michael I\u0026#39;ve… ## 8 8 1 1 Pilot Ken Kwa… Ricky… Pam Well… ## 9 9 1 1 Pilot Ken Kwa… Ricky… Michael If y… ## 10 10 1 1 Pilot Ken Kwa… Ricky… Pam What? ## # … with 2,633 more rows, and 4 more variables: text_w_direction \u0026lt;chr\u0026gt;, ## # imdb_rating \u0026lt;dbl\u0026gt;, total_votes \u0026lt;int\u0026gt;, air_date \u0026lt;fct\u0026gt; #pipe operations %\u0026gt;% #see how many episodes each writer wrote writer.info \u0026lt;- schrute.data %\u0026gt;% group_by(season, episode) %\u0026gt;% #collapse season first, and then episode, but this will leave us with many duplicates distinct(writer, .keep_all = TRUE) #distinct is going to get rid of those duplicates, but also of all the other columns #use .keep_all to keep other columns, BUT R does not distinguish between the duplicates based on previous code and just picks first row in that set of duplicates that are specified Week 3:data visualization\n#ggplot: # 1. provide the DATA # 2. map variables to AESTHETICS # 3. add LAYERS to render the data and aesthetics to the figure #QUESTION: how many episodes did each writer write? #bar chart of writer information ggplot(schrute.data, aes(x = writer)) + geom_bar() #problems? #bar chart of writer information after creating new table ggplot(writer.info, aes(x = writer)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #QUESTION: how many episodes did each writer write per season ggplot(writer.info, aes(x = writer, fill = season)) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #problems? #bar chart of writer information after cleaning up data types in table ggplot(writer.info, aes(x = writer, fill = as.factor(season))) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #ADDING MORE LAYERS #Axes changes #Reorder categories by frequency ggplot(writer.info, aes(x = fct_infreq(writer), fill = as.factor(season))) + geom_bar() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #levels() #fct_infreq() #Visualizing the ratings based on the writer #Notice anything about the writers? #separate writers to each individual writer.individual.info \u0026lt;- writer.info %\u0026gt;% separate_rows(writer, sep = \u0026quot;;\u0026quot;) #QUESTION: What are the writers\u0026#39; ratings? #box plot ggplot(writer.individual.info, aes(x = writer, y = imdb_rating)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #Reordering the x axis by median ggplot(writer.individual.info, aes(x = fct_reorder(writer, imdb_rating, .fun = median, .desc = TRUE), y = imdb_rating)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #Add in points for each episode ggplot(writer.individual.info, aes(x = fct_reorder(writer, imdb_rating, .fun = median, .desc = TRUE), y = imdb_rating)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + geom_point() #separate points by season ggplot(writer.individual.info, aes(x = fct_reorder(writer, imdb_rating, .fun = median, .desc = TRUE), y = imdb_rating)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + geom_jitter(aes(color = factor(season))) ggplot(writer.individual.info, aes(x = fct_reorder(writer, imdb_rating, .fun = median, .desc = TRUE), y = imdb_rating)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + geom_jitter(aes(color = factor(season)))  labs(title = \u0026quot;fun with schrute data\u0026quot;) ## $title ## [1] \u0026quot;fun with schrute data\u0026quot; ## ## attr(,\u0026quot;class\u0026quot;) ## [1] \u0026quot;labels\u0026quot; ","date":1590451200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590451200,"objectID":"754d3fd30e1e53e04360ff56f8848de5","permalink":"/sessions/analyzing-data-from-the-office/","publishdate":"2020-05-26T00:00:00Z","relpermalink":"/sessions/analyzing-data-from-the-office/","section":"sessions","summary":"library(tidyverse) ## ── Attaching packages ─────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.2 ✓ purrr 0.3.4 ## ✓ tibble 3.0.2 ✓ dplyr 1.0.0 ## ✓ tidyr 1.1.0 ✓ stringr 1.","tags":["tidyverse"],"title":"Analyzing Data from The Office","type":"sessions"}]